// Mocks generated by Mockito 5.0.16 from annotations
// in drug_stores/test/unit_tests/controllers/admin_login_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:get/get_connect/http/src/http.dart' as _i3;
import 'package:get/get_connect/http/src/interceptors/get_modifiers.dart'
    as _i4;
import 'package:get/get_connect/http/src/response/response.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDuration_0 extends _i1.Fake implements Duration {}

class _FakeResponse_1<T> extends _i1.Fake implements _i2.Response<T> {}

/// A class which mocks [GetHttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetHttpClient extends _i1.Mock implements _i3.GetHttpClient {
  MockGetHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i3.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration_0()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  bool get errorSafety =>
      (super.noSuchMethod(Invocation.getter(#errorSafety), returnValue: false)
          as bool);
  @override
  set errorSafety(bool? _errorSafety) =>
      super.noSuchMethod(Invocation.setter(#errorSafety, _errorSafety),
          returnValueForMissingStub: null);
  @override
  void addAuthenticator<T>(_i4.RequestModifier<T>? auth) =>
      super.noSuchMethod(Invocation.method(#addAuthenticator, [auth]),
          returnValueForMissingStub: null);
  @override
  void addRequestModifier<T>(_i4.RequestModifier<T>? interceptor) =>
      super.noSuchMethod(Invocation.method(#addRequestModifier, [interceptor]),
          returnValueForMissingStub: null);
  @override
  void removeRequestModifier<T>(_i4.RequestModifier<T>? interceptor) => super
      .noSuchMethod(Invocation.method(#removeRequestModifier, [interceptor]),
          returnValueForMissingStub: null);
  @override
  void addResponseModifier<T>(_i4.ResponseModifier<T>? interceptor) =>
      super.noSuchMethod(Invocation.method(#addResponseModifier, [interceptor]),
          returnValueForMissingStub: null);
  @override
  void removeResponseModifier<T>(_i4.ResponseModifier<T>? interceptor) => super
      .noSuchMethod(Invocation.method(#removeResponseModifier, [interceptor]),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i2.Response<T>> patch<T>(String? url,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i3.Decoder<T>? decoder,
          _i3.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i2.Response<T>>.value(_FakeResponse_1<T>()))
          as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> post<T>(String? url,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i3.Decoder<T>? decoder,
          _i3.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i2.Response<T>>.value(_FakeResponse_1<T>()))
          as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i3.Decoder<T>? decoder,
          _i3.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i2.Response<T>>.value(_FakeResponse_1<T>()))
          as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> put<T>(String? url,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i3.Decoder<T>? decoder,
          _i3.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i2.Response<T>>.value(_FakeResponse_1<T>()))
          as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i3.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i2.Response<T>>.value(_FakeResponse_1<T>()))
          as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i3.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i2.Response<T>>.value(_FakeResponse_1<T>()))
          as _i5.Future<_i2.Response<T>>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
